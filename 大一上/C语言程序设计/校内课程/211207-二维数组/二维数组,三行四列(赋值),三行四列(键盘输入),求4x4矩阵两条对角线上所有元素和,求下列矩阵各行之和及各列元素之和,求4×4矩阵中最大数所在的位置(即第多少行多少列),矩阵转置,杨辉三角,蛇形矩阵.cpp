#include<stdio.h>
int main()
{
	//1 二维数组
	//*
	int a[3][4]={{1,2,3,4},{5,6,7,8},{9,10,11,12}},i,j;
	for(i=0;i<3;i++)
	{
		for(j=0;j<4;j++)
		{
			printf("%-3d",a[i][j]);
		}
		printf("\n");
	}
	//*/ 
	
	
	//2 三行四列(赋值)
	//*
	int a[3][4],i,j,n=1;
	for(i=0;i<3;i++)//赋值 
	{
		for(j=0;j<4;j++)
		{
			a[i][j] = n++;
		}
	}
	for(i=0;i<3;i++)//输出 
	{
		for(j=0;j<4;j++)
		{
			printf("%-3d",a[i][j]);
		}
		printf("\n");
	}
	//*/
	
	
	//3 三行四列(键盘输入)
	//*
	int a[3][4],i,j,n=1;
	for(i=0;i<3;i++)//赋值 
	{
		for(j=0;j<4;j++)
		{
			printf("请输入第%d个数:",n++)
			scanf("%d",&a[i][j]);
		}
	}
	for(i=0;i<3;i++)//输出 
	{
		for(j=0;j<4;j++)
		{
			printf("%-3d",a[i][j]);
		}
		printf("\n");
	}
	//*/
	
	//4 编程求一个4×4矩阵两条对角线上所有元素之和
	//目前只求出一条对角线
	//*
	int a[4][4]={{1,2,3,4},{5,6,7,8},{9,10,11,12},{13,14,15,16}},i,j,sum=0;
	for(i=0;i<4;i++)
	{
		for(j=0;j<4;j++)
		{
			if(i==j)//if(i+j==3) 
			sum += a[i][j];	
		}
	}
	printf("sum=%d\n",sum);
	//*/
	
	
	//5 编写程序，求下列矩阵各行之和及各列元素之和
	/*1  3  5  7  9
	  2  4  6  8  10
	  3  5  8  7  6*/
	//5.1 行求和 
	//*
	int a[3][5]={{1,3,5,7,9},{2,4,6,8,10},{3,5,8,7,6}},i,j,sum[3]={0};
	for(i=0;i<3;i++)
	{
		for(j=0;j<5;j++)
		{
			sum[i] += a[i][j];		
		}
	}
	for(i=0;i<3;i++)//输出 
	{
		printf("第%d行的和是:%d\n",i+1,sum[i]);
	}
	//*/
	
	//5.2 列求和 
	//*
	int a[3][5]={{1,3,5,7,9},{2,4,6,8,10},{3,5,8,7,6}},i,j,sum[5]={0};
	for(j=0;j<5;j++)
	{
		for(i=0;i<3;i++)
		{
			sum[j] += a[i][j];		
		}
	}
	for(i=0;i<5;i++)//输出 
	{
		printf("第%d列的和是:%d\n",i+1,sum[i]);
	}
	//*/
	
	
	//6 编程求一个4×4矩阵中最大数所在的位置(即第多少行多少列)
	///*
	int a[4][4],i,j,max,_i,_j,n=1;
	for(i=0;i<4;i++)//赋值 
	{
		for(j=0;j<4;j++)
		{
			printf("请输入第%d个数:",n++);
			scanf("%d",&a[i][j]);
		}
	}
	for(i=0;i<4;i++)//输出 
	{
		for(j=0;j<4;j++)
		{
			printf("%-5d",a[i][j]);
		}
		printf("\n");
	}
	max = a[0][0];
	for(i=0;i<4;i++)//找最大值 
	{
		for(j=0;j<4;j++)
		{
			if(max<a[i][j])
			{
				max = a[i][j];
				_i = i;
				_j = j;
			}
		}
	}
	printf("最大值为:%d,为a[%d][%d]",max,_i,_j);
	//*/
	
	
	//7 矩阵转置
	//*
	int a[3][4]={{1,2,3,4},{5,6,7,8},{9,10,11,12}},i,j,b[4][3]={0};
	printf("转置前的值为:\n");
	for(i=0;i<3;i++)//转置前输出 
	{
		for(j=0;j<4;j++)
		{
			printf("%-3d",a[i][j]);
		}
		printf("\n");
	}
	for(i=0;i<4;i++)//转置 
	{
		for(j=0;j<3;j++)
		{
			b[i][j] = a[j][i];
		}
	}
	printf("转置后的值为:\n");
	for(i=0;i<4;i++)//转置后输出 
	{
		for(j=0;j<3;j++)
		{
			printf("%-3d",b[i][j]);
		}
		printf("\n");
	}
	//*/
	
	
	//8 杨辉三角
	//*
	int a[10][10],i,j;
	for(i=0;i<10;i++)//填补1 
	{
		a[i][0] = 1;
		a[i][i] = 1;
	}
	for(i=2;i<10;i++)//计算数据 
	{
		for(j=1;j<i;j++)
		{
			a[i][j] = a[i-1][j-1] + a[i-1][j];
		} 
	} 
	for(i=0;i<10;i++)//输出 
	{
		for(j=0;j<10-i;j++)
		{
			printf("  ");//补空 
		}
		for(j=0;j<=i;j++)
		{
			printf("%-4d",a[i][j]);
		}
		printf("\n");
	}
	//*/
	
	
	//9 蛇形矩阵
	//*
	
	//*/
	
	
		 
	return 0;
} 
